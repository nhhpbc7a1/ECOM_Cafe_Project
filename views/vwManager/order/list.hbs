<div class="container-fluid" style="padding: 40px;">
    <div class="row d-flex align-items-center">
        <div class="col-6">
            <img src="/manager/images/homepage_admin/ecom_logo.png" alt="" style="width: 50px;">
        </div>
        {{!-- <div class="col-2">
            <a name="" id="" class="btn btn-primary" href="/manager/order/add" role="button">Thêm order</a>
        </div> --}}
        <div class="col-2">
            <a name="" id="" class="btn btn-primary" href="#" role="button">import</a>
        </div>
        <div class="col-2">
            <a name="" id="" class="btn btn-primary" href="#" role="button">Xuất file</a>
        </div>
    </div>
    <hr>
    <div id="table-wrapper"></div>


    <script src="/node_modules/gridjs/dist/gridjs.umd.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>

    <script>
        function formatPrice(price) {
            return numeral(price).format('0.000') + ' VNĐ';  // Định dạng theo kiểu số VNĐ
        }

        // Lấy dữ liệu từ this.orders đã chuyển sang JSON
        const orderData = {{{ json this.orders }}};

        console.log(orderData);
        // Chuyển đổi dữ liệu từ đối tượng thành mảng để sử dụng trong Grid.js
        const data = orderData.map(item => [item.order_id, item.table_name, item.order_date, item.status, item.total_amount]);

        // Khởi tạo bảng Grid.js
        new gridjs.Grid({
            columns: ["Mã đơn", "Tên bàn", "Thời gian", "Trạng thái",
                {
                    name: "Tổng tiền",
                    formatter: (cell) => {
                        const price = formatPrice(parseFloat(cell.toLocaleString()));
                        return `${price}`
                    },
                    sort: {
                        compare: (a, b) => {
                            if (parseFloat(a) > parseFloat(b)) {
                                return 1;
                            } else if (parseFloat(b) > parseFloat(a)) {
                                return -1;
                            } else {
                                return 0;
                            }
                        },
                    },
                },
                {
                    name: "",
                    formatter: (cell, row) => {
                        return gridjs.html(`                        
                        <a class="btn btn-sm btn-primary" href="/manager/order/detail?id=${row.cells[0].data}" role="button">
                            <i class="bi bi-eye"></i>
                            View Details
                        </a>`);
                    }
                }
            ],
            data: data,
            pagination: {
                limit: 10
            },
            search: true,
            sort: true,
            language: {
                search: {
                    placeholder: 'Tìm kiếm...'
                },
                pagination: {
                    previous: 'Trước',
                    next: 'Sau',
                    showing: 'Hiển thị',
                    results: () => 'kết quả'
                }
            },
            style: {
                th: {
                    background: 'linear-gradient(180deg, rgb(195, 244, 255) 50%, rgb(54, 242, 255) 100%'
                },
            }
        }).render(document.getElementById("table-wrapper"));

    </script>

</div>