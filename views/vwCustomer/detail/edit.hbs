<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Detail</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/customer/css/detail.css">
</head>

<body>
    <form action="/customer/detail/edit" method="POST">
        <input type="hidden" name="product_id" value="{{this.product.menu_item_id}}">
        <input type="hidden" name="quantity" id="hiddenQuantity" value="1">
        <input type="hidden" name="topping" id="selectedToppings" value="">
        <input type="hidden" name="note" id="note" value="">
        <input type="hidden" name="sale_price" id="sale_price" value="{{this.product.sale_price}}">
        <div class="container" style="min-height: 100vh; padding-bottom: 50px;">
            <!-- Card -->
            <div class="card">
                <!-- Header -->
                <div class="food-header">
                    <div class="image" style="background-image: url('/images/{{product.image_href}}');">
                        <div class="header-buttons">
                            <a class="btn-circle" id="close-btn" href="/cart">X</a>
                            <button class="btn-circle" id="share-btn">🔗</button>
                        </div>
                    </div>
                </div>
                <!-- Content -->
                <div class="food-content">
                    <div class="price_name_block food-info">
                        <div class="price_name_block_name">
                            <span>{{product.name}} </span>
                        </div>
                        <div class="text-end price_name_block_price">
                            <span class="price-new">{{format_price product.sale_price}}</span>
                        </div>
                    </div>
                    <span id="txtDescription">{{product.description}}</span>
                </div>
            </div>

            <div class="card">
                <div class="food-content">
                    <!-- Add-ons -->
                    <div class="addons">
                        <div class="d-flex align-items-center mb-3">
                            <div class="title" style="margin-right: 10px;">Thêm toppings</div>
                            <div class="text-muted small">Không bắt buộc</div>
                        </div>
                        {{#each toppings}}
                        <div class="form-check">
                            <input class="form-check-input topping-checkbox" type="checkbox" id="option{{@index}}"
                                data-name="{{this.topping_name}}" data-price="{{this.sale_price}}"
                                data-id="{{this.topping_id}}" {{#if this.selected}}checked{{/if}}>
                            <label class="form-check-label" for="option{{@index}}" style="width: 100%;">
                                <div class="d-flex justify-content-between">
                                    <div>{{this.topping_name}}</div>
                                    <div>+{{format_price this.sale_price}}</div>
                                </div>
                            </label>
                        </div>
                        <hr>
                        {{/each}}
                    </div>
                </div>
            </div>

            <div class="card" style="margin-bottom: 30px;">
                <div class="food-content">
                    <div class="addons">
                        <div class="d-flex align-items-center mb-3">
                            <div class="title" style="margin-right: 10px;">Thêm lưu ý cho quán</div>
                            <div class="text-muted small">Không bắt buộc</div>
                        </div>
                        <div class="form-floating">
                            <textarea class="form-control"
                                placeholder="Việc thực hiện yêu cầu còn tùy thuộc vào khả năng của quán"
                                id="floatingTextarea2" style="height: 100px">{{old_note}}</textarea>
                            <label for="floatingTextarea2">Yêu cầu</label>
                        </div>
                    </div>
                </div>
                <div class="quantity_block">
                    <button type="button" id="btnMinus">
                        <i class="bi bi-dash"></i>
                    </button>
                    <input type="number" name="quantity_display" value="{{quantity}}" id="txtCount" readonly>
                    <button type="button" id="btnPlus">
                        <i class="bi bi-plus"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="footer">
            <button class="btn btn-success btn-lg" type="submit" id="add-to-basket-btn">Save change - {{format_price product.sale_price}}</button>
        </div>
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        updateSelectedToppings();
        calculateTotalPrice();
        updateHiddenQuantity();
        updateSelectedToppings();
        updateNote();

        function formatPrice(price) {
            return numeral(price).format('0.000') + ' VNĐ';
        }

        // Hàm tính toán tổng giá
        function calculateTotalPrice() {
            let basePrice = parseFloat('{{product.sale_price}}'); // Giá cơ bản
            let totalPrice = basePrice;

            // Cộng giá topping
            $('.topping-checkbox:checked').each(function () {
                totalPrice += parseFloat($(this).data('price'));
            });

            // Số lượng
            let quantity = parseInt($('#txtCount').val());

            // Tổng giá
            let finalPrice = totalPrice * quantity;

            // Cập nhật hiển thị
            $('#add-to-basket-btn').text(`Save change - ${formatPrice(finalPrice)}`);
        }

        function updateHiddenQuantity() {
            $('#hiddenQuantity').val($('#txtCount').val());
        }

        // Hàm cập nhật các topping được chọn
        function updateSelectedToppings() {
            let selected = [];
            $('.topping-checkbox:checked').each(function () {
                // Lấy thông tin topping từ data-attributes của checkbox
                let toppingInfo = {
                    topping_id: $(this).data('topping_id'),
                    name: $(this).data('name'), // Tên topping
                    price: $(this).data('price') // Giá topping
                };
                selected.push(toppingInfo); // Thêm topping vào mảng
            });
            // Chuyển mảng thành chuỗi JSON và cập nhật vào trường ẩn
            $('#selectedToppings').val(JSON.stringify(selected));  // Cập nhật vào form
        }

        // Cập nhật giá trị note khi gửi form
        function updateNote() {
            $('#note').val($('#floatingTextarea2').val());
        }

        $(document).ready(function () {
            calculateTotalPrice(); // Tính giá khi tải trang

            // Sự kiện khi thay đổi topping
            $('.topping-checkbox').change(function () {
                updateSelectedToppings();
                calculateTotalPrice();
            });

            // Giảm số lượng
            $('#btnMinus').click(function () {
                let count = parseInt($('#txtCount').val());
                if (count > 1) {
                    $('#txtCount').val(--count);
                    updateHiddenQuantity();  // Cập nhật quantity
                    calculateTotalPrice();
                }
            });

            // Tăng số lượng
            $('#btnPlus').click(function () {
                let count = parseInt($('#txtCount').val());
                $('#txtCount').val(++count);
                updateHiddenQuantity();  // Cập nhật quantity
                calculateTotalPrice();
            });

            // Cập nhật giá trị note khi gửi form
            $('#add-to-basket-btn').click(function () {
                updateNote();  // Cập nhật note trước khi gửi form
            });
        });
    </script>
</body>

</html>