<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="/customer/css/Cart.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body style="padding: 0;">
    <div class="card" style="width: 40rem;">
        <div class="card-header cart-header">
            <a href="/menu">
                <i class="bi bi-arrow-left"></i>
            </a>

            <div id="cart-title">
                <div>{{branchInfo.name}}</div>
                <div id="cart-table">{{customer_table_id}}</div>
            </div>
            <i class="bi bi-bell-fill"></i>
        </div>
        <div class="card-body">
            <h3 class="order-summary">Order summary <span class="add-items">Add items</span></h3>
            <script>
                document.querySelector('.add-items').addEventListener('click', function () {
                    // Điều hướng về trang menu hoặc sản phẩm (ví dụ: trang sản phẩm)
                    window.location.href = '/menu';  // Hoặc thay '/menu' bằng URL bạn muốn quay lại
                });
            </script>

            {{#each cart}}
            <div class="container">
                <div class="row align-items-center mb-3">
                    <div class="col-4">
                        <h6 class="mb-1">{{this.name}}</h6>
                        <small class="text-muted">

                            {{#each topping}}
                            <div class="order_item_topping_name">
                                {{name}}
                            </div>
                            {{/each}}
                            <div class="order_item_note" style="color: #aaa">{{note}}</div>

                        </small>
                    </div>
                    <div class="col-4 d-flex justify-content-center align-items-center">
                        <form action="/cart/update" id="updateCartFormDecrease_{{this.product_id}}" method="post"
                            style="display: none;">
                            <input type="hidden" name="product_id" value="{{this.product_id}}">
                            <input type="hidden" name="name" id="hiddenMenuItemName" value="{{this.menu_item.name}}">
                            <input type="hidden" name="quantity" id="hiddenQuantity" value="1">
                            <input type="hidden" name="sale_price" id="hiddenMenuItemPrice" value="{{this.sale_price}}">
                            <input type="hidden" name="topping" id="hiddenNote" value="">
                            <input type="hidden" name="note" id="hiddenNote" value="">
                            <input type="hidden" name="image_href" id="hiddenNote" value="{{this.image_href}}">
                            <input type="hidden" name="change" value="-1">
                        </form>
                        <i class="bi bi-dash-square decrease mx-2"
                            onclick="document.getElementById('updateCartFormDecrease_{{this.product_id}}').submit();"></i>

                        <span class="mx-2">{{this.quantity}}</span>

                        <form action="/cart/update" id="updateCartFormIncrease_{{this.product_id}}" method="post"
                            style="display: none;">
                            <input type="hidden" name="product_id" value="{{this.product_id}}">
                            <input type="hidden" name="change" value="1">
                        </form>
                        <i class="bi bi-plus-square increase mx-2"
                            onclick="document.getElementById('updateCartFormIncrease_{{this.product_id}}').submit();"></i>
                    </div>

                    <!-- Giá tiền -->
                    <div class="col-2 text-end">
                        <span>{{format_price this.total_price}}</span>
                    </div>

                    <!-- Nút sửa -->
                    <div class="col-2 text-end">
                        <a href="/customer/detail/edit?id={{this.product_id}}" class="text-primary">Edit</a>
                    </div>
                </div>
            </div>

            {{/each}}

            <h4>People also order</h4>
            <div id="recommendations-container" class="recommendations-container">


            </div>
            <script>
                function formatPrice(price) {
                    return numeral(price).format('0.000') + ' VNĐ';
                }
                function isOnCartPage() {
                    return window.location.pathname === '/cart';
                }

                // Hàm tải sản phẩm ngẫu nhiên từ API
                async function loadRandomProducts() {
                    if (!isOnCartPage()) return;

                    try {
                        const response = await fetch('/cart/random-products');
                        const result = await response.json();

                        if (result.success) {
                            const randomProducts = result.data;
                            const container = document.querySelector('.recommendations-container');
                            container.innerHTML = '';

                            randomProducts.forEach(product => {

                                const product_price = formatPrice(product.sale_price);
                                const productHTML = `
                                    <div class="card card-recommend">
                                        <img src="/images/menu_items/${product.menu_item_id}/main.jpg" class="card-img-top img-recommend" alt="${product.name}">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">${product.name}</h6>
                                            <p class="card-text">${product_price}</p>
                                            <form action="/menu/add" id="addToCartForm_${product.menu_item_id}" method="post" style="display: none;">
                                                <input type="hidden" name="product_id" value="${product.menu_item_id}">
                                                <input type="hidden" name="name" value="${product.name}">
                                                <input type="hidden" name="sale_price" value="${product.sale_price}">
                                                <input type="hidden" name="quantity" value="1">
                                            </form>
                                            <a href="javascript: addToCart(${product.menu_item_id});" class="btn btn-primary btn-sm">
                                                Add to Order
                                            </a>
                                        </div>
                                    </div>
                                `;
                                container.innerHTML += productHTML;
                            });
                        } else {
                            console.error('Failed to load random products:', result.message);
                        }
                    } catch (error) {
                        console.error('Error loading random products:', error);
                    }
                }

                // Hàm thêm sản phẩm vào giỏ hàng
                function addToCart(productId) {
                    const form = document.getElementById(`addToCartForm_${productId}`);
                    form.submit();
                }
                loadRandomProducts();


                setInterval(loadRandomProducts, 10000);

            </script>

            <div class="summary mt-3">
                <h6>Subtotal</h6>
                <h6>{{format_price this.totalSubtotal}}</h6>
            </div>

            <div class="summary">
                <h6>Applicable fees</h6>
                <h6>{{format_price fees}}</h6>
            </div>

            <hr>

        </div>
        <div class="sticky-footer card-footer text-muted">
            <div id="total">
                <div>Total</div>
                <div id="total-price">{{format_price totalPrice}}</div>
            </div>
            <a type="button" class="btn btn-primary btn-cart-order" href="#">Order</a>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"
        integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+"
        crossorigin="anonymous"></script>
    <script>
        // Lắng nghe sự kiện khi người dùng nhấn nút "Order"
        document.querySelector('.btn-cart-order').addEventListener('click', function (e) {
            e.preventDefault();  // Ngừng hành động mặc định của nút (không gửi form ngay lập tức)

            // Hiển thị SweetAlert để xác nhận
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to proceed with the order?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, place order!',
                cancelButtonText: 'No, cancel!',
            }).then((result) => {
                // Nếu người dùng chọn "Yes, place order!"
                if (result.isConfirmed) {
                    fetch('/customer/cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',  // Thêm header nếu cần
                        },
                    }).then(response => {
                        if (!response.ok) {
                            throw new Error('Không thể thanh toán');
                        }
                        return response.json();
                    }).then(data => {
                        Swal.fire('Thành công!', 'Thanh toán thành công', 'success');
                    }).catch(error => {
                        Swal.fire('Lỗi!', 'Đã có lỗi xảy ra', 'error');
                    });
                } else {
                    // Nếu người dùng chọn "No, cancel!", không làm gì cả
                    console.log('Order canceled');
                }
            });
        });
    </script>

</body>

</html>